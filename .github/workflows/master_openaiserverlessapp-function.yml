name: Build and deploy Python project to Azure Function App - openaiserverlessapp-function
on:
  push:
    branches:
      - master
  workflow_dispatch:
env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './openai-serverless-app/python'
  PYTHON_VERSION: '3.9'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      - name: Install dependencies
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          pip install -r requirements.txt
      - name: Zip artifact for deployment
        run: | 
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          zip -r ../../release.zip ./*
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-function.outputs.webapp-url }}
    permissions:
      id-token: write
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      - name: Unzip artifact for deployment
        run: unzip release.zip -d .
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID}}
          tenant-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}
          subscription-id: ${{ secrets.AZURE_TENANT_ID}}
      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'openaiserverlessapp-function'
          slot-name: 'Production'
          package: .
          scm-do-build-during-deployment: true
          enable-oryx-build: true